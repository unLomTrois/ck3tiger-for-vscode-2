{
    "name": "tiger-for-vscode",
    "displayName": "tiger for VS Code",
    "description": "Helps you make mods for Crusader Kings III/Victoria 3/Imperator: Rome using Amtep's Tiger tool (previously ck3-tiger)",
    "version": "1.1.2",
    "icon": "images/logo.png",
    "engines": {
        "vscode": "^1.93.0"
    },
    "type": "commonjs",
    "publisher": "unlomtrois",
    "author": {
        "name": "Vadim Kuznetsov",
        "url": "https://github.com/unLomTrois"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/unLomTrois/ck3tiger-for-vscode-2"
    },
    "bugs": {
        "url": "https://github.com/unLomTrois/ck3tiger-for-vscode-2/issues"
    },
    "homepage": "https://github.com/unLomTrois/ck3tiger-for-vscode-2",
    "categories": [
        "Other",
        "Programming Languages",
        "Linters"
    ],
    "keywords": [
        "paradox",
        "ck3",
        "vic3",
        "crusader kings 3",
        "victoria 3",
        "imperator",
        "ck3tiger",
        "pdxscript"
    ],
    "activationEvents": [
        "onStartupFinished",
        "onLanguage:ck3"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "tiger-for-vscode.runTiger",
                "title": "tiger: Run tiger"
            },
            {
                "command": "tiger-for-vscode.updateTiger",
                "title": "tiger: Update tiger"
            },
            {
                "command": "tiger-for-vscode.resetPaths",
                "title": "tiger: Reset Paths"
            },
            {
                "command": "tiger-for-vscode.getProblemsFromLog",
                "title": "tiger: Get problems from the log file (without running tiger)"
            },
            {
                "command": "tiger-for-vscode.openTigerPath",
                "title": "tiger: Open Tiger Binary Location"
            },
            {
                "command": "tiger-for-vscode.openGamePath",
                "title": "tiger: Open Game Folder"
            },
            {
                "command": "tiger-for-vscode.reportBug",
                "title": "tiger: Report a Bug"
            }
        ],
        "configuration": {
            "title": "tiger configuration",
            "properties": {
                "tiger.tigerPath": {
                    "scope": "application",
                    "type": "string",
                    "markdownDescription": "Specifies location of your tiger instance"
                },
                "tiger.gamePath": {
                    "scope": "application",
                    "type": "string",
                    "description": "The location of a vanilla installation (like \"C:/Program Files (x86)/Steam/steamapps/common/Crusader Kings III/game\""
                },
                "tiger.modPath": {
                    "scope": "application",
                    "type": "string",
                    "description": "The location of your .mod file (CK3) or root dir of your mod (Vic3) (like \"Like Documents/Paradox Interactive/Crusader Kings III/mod/<.mod file>\""
                },
                "tiger.gameTag": {
                    "scope": "application",
                    "type": "string",
                    "description": "The tag of the selected game, based on the gamePath - 'ck3', 'vic3', or 'imperator'",
                    "markdownDescription": "Please allow this value to be set automatically during installation of this VSCode extension"
                },
                "tiger.minConfidence": {
                    "title": "Minimum confidence level",
                    "scope": "application",
                    "type": "string",
                    "enum": [
                        "weak",
                        "reasonable",
                        "strong"
                    ],
                    "default": "weak",
                    "markdownEnumDescriptions": [
                        "*weak* for likely false positives.",
                        "*reasonable* for most messages.",
                        "*strong* for confidence that the problem is real."
                    ],
                    "markdownDescription": "\nThe minimum confidence level for a problem to be reported.\n\nConfidence is how sure the validator is about a problem.\n\n- *weak* for likely false positives.\n- *reasonable* for most messages.\n- *strong* for confidence that the problem is real.\n\n**weak** is the default."
                },
                "tiger.experimental.runOnSave": {
                    "title": "Run tiger on file save",
                    "scope": "application",
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "When enabled, automatically runs tiger validation when a file is saved within the mod directory."
                },
                "tiger.experimental.patterns": {
                    "title": "File patterns to detect changes",
                    "scope": "application",
                    "type": "string",
                    "default": "**/*.{txt,yml}",
                    "markdownDescription": "A glob pattern for files to run tiger on when a file is saved within the mod directory."
                },
                "tiger.openPreviousLogOnStartup": {
                    "title": "Open previous log on startup",
                    "scope": "application",
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "When enabled, automatically generates problems from the previous log file on startup."
                },
                "tiger.checkUpdatesOnStartup": {
                    "title": "Check for updates on startup",
                    "scope": "application",
                    "type": "boolean",
                    "default": false,
                    "markdownDescription": "When enabled, automatically checks for tiger updates when the extension starts."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "npm run check-types && npm run lint && node esbuild.js",
        "watch": "npm-run-all -p watch:*",
        "watch:esbuild": "node esbuild.js --watch",
        "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
        "package": "npm run check-types && npm run lint && node esbuild.js --production",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile && npm run lint",
        "check-types": "tsc --noEmit",
        "lint": "eslint src",
        "test": "vscode-test"
    },
    "devDependencies": {
        "@types/mocha": "^10.0.8",
        "@types/node": "20.x",
        "@types/vscode": "^1.93.0",
        "@typescript-eslint/eslint-plugin": "^8.7.0",
        "@typescript-eslint/parser": "^8.7.0",
        "@vscode/test-cli": "^0.0.10",
        "@vscode/test-electron": "^2.4.1",
        "esbuild": "^0.25.0",
        "eslint": "^9.11.1",
        "npm-run-all": "^4.1.5",
        "typescript": "^5.4.5"
    },
    "dependencies": {
        "@octokit/core": "^6.1.5"
    }
}
